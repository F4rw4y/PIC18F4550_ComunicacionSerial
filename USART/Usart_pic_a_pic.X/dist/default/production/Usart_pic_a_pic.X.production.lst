

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Oct 02 00:58:38 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13  0000                     
    14                           ; Version 2.10
    15                           ; Generated 31/07/2019 GMT
    16                           ; 
    17                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F4550 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     _RCREG	set	4014
    49  0000                     _TXREG	set	4013
    50  0000                     _RCSTAbits	set	4011
    51  0000                     _TXSTAbits	set	4012
    52  0000                     _SPBRG	set	4015
    53  0000                     _TRISCbits	set	3988
    54                           
    55                           ; #config settings
    56  0000                     
    57                           	psect	cinit
    58  007EA4                     __pcinit:
    59                           	opt callstack 0
    60  007EA4                     start_initialization:
    61                           	opt callstack 0
    62  007EA4                     __initialization:
    63                           	opt callstack 0
    64  007EA4                     end_of_initialization:
    65                           	opt callstack 0
    66  007EA4                     __end_of__initialization:
    67                           	opt callstack 0
    68  007EA4  0100               	movlb	0
    69  007EA6  EF82  F03F         	goto	_main	;jump to C main() function
    70                           
    71                           	psect	cstackCOMRAM
    72  000001                     __pcstackCOMRAM:
    73                           	opt callstack 0
    74  000001                     ?___lldiv:
    75                           	opt callstack 0
    76  000001                     USART_Tx@data:
    77                           	opt callstack 0
    78  000001                     ___lldiv@dividend:
    79                           	opt callstack 0
    80                           
    81                           ; 4 bytes @ 0x0
    82  000001                     	ds	4
    83  000005                     ___lldiv@divisor:
    84                           	opt callstack 0
    85                           
    86                           ; 4 bytes @ 0x4
    87  000005                     	ds	4
    88  000009                     ___lldiv@quotient:
    89                           	opt callstack 0
    90                           
    91                           ; 4 bytes @ 0x8
    92  000009                     	ds	4
    93  00000D                     ___lldiv@counter:
    94                           	opt callstack 0
    95                           
    96                           ; 1 bytes @ 0xC
    97  00000D                     	ds	1
    98  00000E                     USART_In@BAUD:
    99                           	opt callstack 0
   100                           
   101                           ; 4 bytes @ 0xD
   102  00000E                     	ds	4
   103  000012                     ??_main:
   104                           
   105                           ; 1 bytes @ 0x11
   106  000012                     	ds	2
   107                           
   108 ;;
   109 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   110 ;;
   111 ;; *************** function _main *****************
   112 ;; Defined at:
   113 ;;		line 13 in file "Usar_main.c"
   114 ;; Parameters:    Size  Location     Type
   115 ;;		None
   116 ;; Auto vars:     Size  Location     Type
   117 ;;		None
   118 ;; Return value:  Size  Location     Type
   119 ;;                  1    wreg      void 
   120 ;; Registers used:
   121 ;;		wreg, status,2, status,0, cstack
   122 ;; Tracked objects:
   123 ;;		On entry : 0/0
   124 ;;		On exit  : 0/0
   125 ;;		Unchanged: 0/0
   126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   127 ;;      Params:         0       0       0       0       0       0       0       0       0
   128 ;;      Locals:         0       0       0       0       0       0       0       0       0
   129 ;;      Temps:          2       0       0       0       0       0       0       0       0
   130 ;;      Totals:         2       0       0       0       0       0       0       0       0
   131 ;;Total ram usage:        2 bytes
   132 ;; Hardware stack levels required when called:    2
   133 ;; This function calls:
   134 ;;		_USART_In
   135 ;;		_USART_Tx
   136 ;; This function is called by:
   137 ;;		Startup code after reset
   138 ;; This function uses a non-reentrant model
   139 ;;
   140                           
   141                           	psect	text0
   142  007F04                     __ptext0:
   143                           	opt callstack 0
   144  007F04                     _main:
   145                           	opt callstack 29
   146  007F04                     
   147                           ;Usar_main.c: 15:     USART_In(9600);
   148  007F04  0E80               	movlw	128
   149  007F06  6E0E               	movwf	USART_In@BAUD^0,c
   150  007F08  0E25               	movlw	37
   151  007F0A  6E0F               	movwf	(USART_In@BAUD+1)^0,c
   152  007F0C  0E00               	movlw	0
   153  007F0E  6E10               	movwf	(USART_In@BAUD+2)^0,c
   154  007F10  0E00               	movlw	0
   155  007F12  6E11               	movwf	(USART_In@BAUD+3)^0,c
   156  007F14  EC59  F03F         	call	_USART_In	;wreg free
   157  007F18                     l809:
   158                           
   159                           ;Usar_main.c: 19:         USART_Tx(0x33);
   160  007F18  0E33               	movlw	51
   161  007F1A  EC55  F03F         	call	_USART_Tx
   162  007F1E                     
   163                           ;Usar_main.c: 20:         _delay((unsigned long)((500)*(20000000UL/4000.0)));
   164  007F1E  0E0D               	movlw	13
   165  007F20  6E13               	movwf	(??_main+1)^0,c
   166  007F22  0EAF               	movlw	175
   167  007F24  6E12               	movwf	??_main^0,c
   168  007F26  0EB6               	movlw	182
   169  007F28                     u97:
   170  007F28  2EE8               	decfsz	wreg,f,c
   171  007F2A  D7FE               	bra	u97
   172  007F2C  2E12               	decfsz	??_main^0,f,c
   173  007F2E  D7FC               	bra	u97
   174  007F30  2E13               	decfsz	(??_main+1)^0,f,c
   175  007F32  D7FA               	bra	u97
   176  007F34  D000               	nop2	
   177  007F36                     
   178                           ;Usar_main.c: 21:         USART_Tx(0x99);
   179  007F36  0E99               	movlw	153
   180  007F38  EC55  F03F         	call	_USART_Tx
   181  007F3C                     
   182                           ;Usar_main.c: 22:         _delay((unsigned long)((500)*(20000000UL/4000.0)));
   183  007F3C  0E0D               	movlw	13
   184  007F3E  6E13               	movwf	(??_main+1)^0,c
   185  007F40  0EAF               	movlw	175
   186  007F42  6E12               	movwf	??_main^0,c
   187  007F44  0EB6               	movlw	182
   188  007F46                     u107:
   189  007F46  2EE8               	decfsz	wreg,f,c
   190  007F48  D7FE               	bra	u107
   191  007F4A  2E12               	decfsz	??_main^0,f,c
   192  007F4C  D7FC               	bra	u107
   193  007F4E  2E13               	decfsz	(??_main+1)^0,f,c
   194  007F50  D7FA               	bra	u107
   195  007F52  D000               	nop2	
   196  007F54  EF8C  F03F         	goto	l809
   197  007F58  EF00  F000         	goto	start
   198  007F5C                     __end_of_main:
   199                           	opt callstack 0
   200                           
   201 ;; *************** function _USART_Tx *****************
   202 ;; Defined at:
   203 ;;		line 41 in file "usart_libreria.c"
   204 ;; Parameters:    Size  Location     Type
   205 ;;  data            1    wreg     unsigned char 
   206 ;; Auto vars:     Size  Location     Type
   207 ;;  data            1    0[COMRAM] unsigned char 
   208 ;; Return value:  Size  Location     Type
   209 ;;                  1    wreg      void 
   210 ;; Registers used:
   211 ;;		wreg
   212 ;; Tracked objects:
   213 ;;		On entry : 0/0
   214 ;;		On exit  : 0/0
   215 ;;		Unchanged: 0/0
   216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   217 ;;      Params:         0       0       0       0       0       0       0       0       0
   218 ;;      Locals:         1       0       0       0       0       0       0       0       0
   219 ;;      Temps:          0       0       0       0       0       0       0       0       0
   220 ;;      Totals:         1       0       0       0       0       0       0       0       0
   221 ;;Total ram usage:        1 bytes
   222 ;; Hardware stack levels used:    1
   223 ;; This function calls:
   224 ;;		Nothing
   225 ;; This function is called by:
   226 ;;		_main
   227 ;; This function uses a non-reentrant model
   228 ;;
   229                           
   230                           	psect	text1
   231  007EAA                     __ptext1:
   232                           	opt callstack 0
   233  007EAA                     _USART_Tx:
   234                           	opt callstack 30
   235                           
   236                           ;incstack = 0
   237                           ;USART_Tx@data stored from wreg
   238  007EAA  6E01               	movwf	USART_Tx@data^0,c
   239  007EAC                     
   240                           ;usart_libreria.c: 43:     TXREG = data;
   241  007EAC  C001  FFAD         	movff	USART_Tx@data,4013	;volatile
   242  007EB0  0012               	return		;funcret
   243  007EB2                     __end_of_USART_Tx:
   244                           	opt callstack 0
   245                           
   246 ;; *************** function _USART_In *****************
   247 ;; Defined at:
   248 ;;		line 21 in file "usart_libreria.c"
   249 ;; Parameters:    Size  Location     Type
   250 ;;  BAUD            4   13[COMRAM] long 
   251 ;; Auto vars:     Size  Location     Type
   252 ;;		None
   253 ;; Return value:  Size  Location     Type
   254 ;;                  1    wreg      void 
   255 ;; Registers used:
   256 ;;		wreg, status,2, status,0, cstack
   257 ;; Tracked objects:
   258 ;;		On entry : 0/0
   259 ;;		On exit  : 0/0
   260 ;;		Unchanged: 0/0
   261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   262 ;;      Params:         4       0       0       0       0       0       0       0       0
   263 ;;      Locals:         0       0       0       0       0       0       0       0       0
   264 ;;      Temps:          0       0       0       0       0       0       0       0       0
   265 ;;      Totals:         4       0       0       0       0       0       0       0       0
   266 ;;Total ram usage:        4 bytes
   267 ;; Hardware stack levels used:    1
   268 ;; Hardware stack levels required when called:    1
   269 ;; This function calls:
   270 ;;		___lldiv
   271 ;; This function is called by:
   272 ;;		_main
   273 ;; This function uses a non-reentrant model
   274 ;;
   275                           
   276                           	psect	text2
   277  007EB2                     __ptext2:
   278                           	opt callstack 0
   279  007EB2                     _USART_In:
   280                           	opt callstack 29
   281  007EB2                     
   282                           ;usart_libreria.c: 23:     TRISCbits.RC6 = 0;
   283  007EB2  9C94               	bcf	148,6,c	;volatile
   284                           
   285                           ;usart_libreria.c: 24:     TRISCbits.RC7 = 1;
   286  007EB4  8E94               	bsf	148,7,c	;volatile
   287  007EB6                     
   288                           ;usart_libreria.c: 26:     SPBRG = (((20000000UL/BAUD)/64)-1);
   289  007EB6  0E00               	movlw	0
   290  007EB8  6E01               	movwf	___lldiv@dividend^0,c
   291  007EBA  0E2D               	movlw	45
   292  007EBC  6E02               	movwf	(___lldiv@dividend+1)^0,c
   293  007EBE  0E31               	movlw	49
   294  007EC0  6E03               	movwf	(___lldiv@dividend+2)^0,c
   295  007EC2  0E01               	movlw	1
   296  007EC4  6E04               	movwf	(___lldiv@dividend+3)^0,c
   297  007EC6  C00E  F005         	movff	USART_In@BAUD,___lldiv@divisor
   298  007ECA  C00F  F006         	movff	USART_In@BAUD+1,___lldiv@divisor+1
   299  007ECE  C010  F007         	movff	USART_In@BAUD+2,___lldiv@divisor+2
   300  007ED2  C011  F008         	movff	USART_In@BAUD+3,___lldiv@divisor+3
   301  007ED6  ECAE  F03F         	call	___lldiv	;wreg free
   302  007EDA  0E07               	movlw	7
   303  007EDC  EF75  F03F         	goto	u80
   304  007EE0                     u85:
   305  007EE0  90D8               	bcf	status,0,c
   306  007EE2  3204               	rrcf	(?___lldiv+3)^0,f,c
   307  007EE4  3203               	rrcf	(?___lldiv+2)^0,f,c
   308  007EE6  3202               	rrcf	(?___lldiv+1)^0,f,c
   309  007EE8  3201               	rrcf	?___lldiv^0,f,c
   310  007EEA                     u80:
   311  007EEA  2EE8               	decfsz	wreg,f,c
   312  007EEC  EF70  F03F         	goto	u85
   313  007EF0  0401               	decf	?___lldiv^0,w,c
   314  007EF2  6EAF               	movwf	175,c	;volatile
   315  007EF4                     
   316                           ;usart_libreria.c: 27:     TXSTAbits.BRGH = 0;
   317  007EF4  94AC               	bcf	172,2,c	;volatile
   318  007EF6                     
   319                           ;usart_libreria.c: 29:     TXSTAbits.SYNC = 0;
   320  007EF6  98AC               	bcf	172,4,c	;volatile
   321  007EF8                     
   322                           ;usart_libreria.c: 30:     RCSTAbits.SPEN = 1;
   323  007EF8  8EAB               	bsf	171,7,c	;volatile
   324  007EFA                     
   325                           ;usart_libreria.c: 33:     TXSTAbits.TX9 = 0;
   326  007EFA  9CAC               	bcf	172,6,c	;volatile
   327  007EFC                     
   328                           ;usart_libreria.c: 34:     TXSTAbits.TXEN = 1;
   329  007EFC  8AAC               	bsf	172,5,c	;volatile
   330  007EFE                     
   331                           ;usart_libreria.c: 36:     RCSTAbits.RC9 = 0;
   332  007EFE  9CAB               	bcf	171,6,c	;volatile
   333  007F00                     
   334                           ;usart_libreria.c: 37:     RCSTAbits.CREN = 1;
   335  007F00  88AB               	bsf	171,4,c	;volatile
   336  007F02  0012               	return		;funcret
   337  007F04                     __end_of_USART_In:
   338                           	opt callstack 0
   339                           
   340 ;; *************** function ___lldiv *****************
   341 ;; Defined at:
   342 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__lldiv.c"
   343 ;; Parameters:    Size  Location     Type
   344 ;;  dividend        4    0[COMRAM] unsigned long 
   345 ;;  divisor         4    4[COMRAM] unsigned long 
   346 ;; Auto vars:     Size  Location     Type
   347 ;;  quotient        4    8[COMRAM] unsigned long 
   348 ;;  counter         1   12[COMRAM] unsigned char 
   349 ;; Return value:  Size  Location     Type
   350 ;;                  4    0[COMRAM] unsigned long 
   351 ;; Registers used:
   352 ;;		wreg, status,2, status,0
   353 ;; Tracked objects:
   354 ;;		On entry : 0/0
   355 ;;		On exit  : 0/0
   356 ;;		Unchanged: 0/0
   357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   358 ;;      Params:         8       0       0       0       0       0       0       0       0
   359 ;;      Locals:         5       0       0       0       0       0       0       0       0
   360 ;;      Temps:          0       0       0       0       0       0       0       0       0
   361 ;;      Totals:        13       0       0       0       0       0       0       0       0
   362 ;;Total ram usage:       13 bytes
   363 ;; Hardware stack levels used:    1
   364 ;; This function calls:
   365 ;;		Nothing
   366 ;; This function is called by:
   367 ;;		_USART_In
   368 ;; This function uses a non-reentrant model
   369 ;;
   370                           
   371                           	psect	text3
   372  007F5C                     __ptext3:
   373                           	opt callstack 0
   374  007F5C                     ___lldiv:
   375                           	opt callstack 29
   376  007F5C  0E00               	movlw	0
   377  007F5E  6E09               	movwf	___lldiv@quotient^0,c
   378  007F60  0E00               	movlw	0
   379  007F62  6E0A               	movwf	(___lldiv@quotient+1)^0,c
   380  007F64  0E00               	movlw	0
   381  007F66  6E0B               	movwf	(___lldiv@quotient+2)^0,c
   382  007F68  0E00               	movlw	0
   383  007F6A  6E0C               	movwf	(___lldiv@quotient+3)^0,c
   384  007F6C  5005               	movf	___lldiv@divisor^0,w,c
   385  007F6E  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
   386  007F70  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
   387  007F72  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
   388  007F74  B4D8               	btfsc	status,2,c
   389  007F76  EFBF  F03F         	goto	u51
   390  007F7A  EFC1  F03F         	goto	u50
   391  007F7E                     u51:
   392  007F7E  EFF7  F03F         	goto	l65
   393  007F82                     u50:
   394  007F82  0E01               	movlw	1
   395  007F84  6E0D               	movwf	___lldiv@counter^0,c
   396  007F86  EFCB  F03F         	goto	l775
   397  007F8A                     l773:
   398  007F8A  90D8               	bcf	status,0,c
   399  007F8C  3605               	rlcf	___lldiv@divisor^0,f,c
   400  007F8E  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
   401  007F90  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
   402  007F92  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
   403  007F94  2A0D               	incf	___lldiv@counter^0,f,c
   404  007F96                     l775:
   405  007F96  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
   406  007F98  EFD0  F03F         	goto	u61
   407  007F9C  EFD2  F03F         	goto	u60
   408  007FA0                     u61:
   409  007FA0  EFC5  F03F         	goto	l773
   410  007FA4                     u60:
   411  007FA4                     l777:
   412  007FA4  90D8               	bcf	status,0,c
   413  007FA6  3609               	rlcf	___lldiv@quotient^0,f,c
   414  007FA8  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
   415  007FAA  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
   416  007FAC  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
   417  007FAE  5005               	movf	___lldiv@divisor^0,w,c
   418  007FB0  5C01               	subwf	___lldiv@dividend^0,w,c
   419  007FB2  5006               	movf	(___lldiv@divisor+1)^0,w,c
   420  007FB4  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
   421  007FB6  5007               	movf	(___lldiv@divisor+2)^0,w,c
   422  007FB8  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
   423  007FBA  5008               	movf	(___lldiv@divisor+3)^0,w,c
   424  007FBC  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
   425  007FBE  A0D8               	btfss	status,0,c
   426  007FC0  EFE4  F03F         	goto	u71
   427  007FC4  EFE6  F03F         	goto	u70
   428  007FC8                     u71:
   429  007FC8  EFEF  F03F         	goto	l785
   430  007FCC                     u70:
   431  007FCC  5005               	movf	___lldiv@divisor^0,w,c
   432  007FCE  5E01               	subwf	___lldiv@dividend^0,f,c
   433  007FD0  5006               	movf	(___lldiv@divisor+1)^0,w,c
   434  007FD2  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
   435  007FD4  5007               	movf	(___lldiv@divisor+2)^0,w,c
   436  007FD6  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
   437  007FD8  5008               	movf	(___lldiv@divisor+3)^0,w,c
   438  007FDA  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
   439  007FDC  8009               	bsf	___lldiv@quotient^0,0,c
   440  007FDE                     l785:
   441  007FDE  90D8               	bcf	status,0,c
   442  007FE0  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
   443  007FE2  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
   444  007FE4  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
   445  007FE6  3205               	rrcf	___lldiv@divisor^0,f,c
   446  007FE8  2E0D               	decfsz	___lldiv@counter^0,f,c
   447  007FEA  EFD2  F03F         	goto	l777
   448  007FEE                     l65:
   449  007FEE  C009  F001         	movff	___lldiv@quotient,?___lldiv
   450  007FF2  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
   451  007FF6  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
   452  007FFA  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
   453  007FFE  0012               	return		;funcret
   454  008000                     __end_of___lldiv:
   455                           	opt callstack 0
   456  0000                     
   457                           	psect	rparam
   458  0000                     tosu	equ	0xFFF
   459                           tosh	equ	0xFFE
   460                           tosl	equ	0xFFD
   461                           stkptr	equ	0xFFC
   462                           pclatu	equ	0xFFB
   463                           pclath	equ	0xFFA
   464                           pcl	equ	0xFF9
   465                           tblptru	equ	0xFF8
   466                           tblptrh	equ	0xFF7
   467                           tblptrl	equ	0xFF6
   468                           tablat	equ	0xFF5
   469                           prodh	equ	0xFF4
   470                           prodl	equ	0xFF3
   471                           indf0	equ	0xFEF
   472                           postinc0	equ	0xFEE
   473                           postdec0	equ	0xFED
   474                           preinc0	equ	0xFEC
   475                           plusw0	equ	0xFEB
   476                           fsr0h	equ	0xFEA
   477                           fsr0l	equ	0xFE9
   478                           wreg	equ	0xFE8
   479                           indf1	equ	0xFE7
   480                           postinc1	equ	0xFE6
   481                           postdec1	equ	0xFE5
   482                           preinc1	equ	0xFE4
   483                           plusw1	equ	0xFE3
   484                           fsr1h	equ	0xFE2
   485                           fsr1l	equ	0xFE1
   486                           bsr	equ	0xFE0
   487                           indf2	equ	0xFDF
   488                           postinc2	equ	0xFDE
   489                           postdec2	equ	0xFDD
   490                           preinc2	equ	0xFDC
   491                           plusw2	equ	0xFDB
   492                           fsr2h	equ	0xFDA
   493                           fsr2l	equ	0xFD9
   494                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     19      19
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_USART_In
    _USART_In->___lldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     427
                                             17 COMRAM     2     2      0
                           _USART_In
                           _USART_Tx
 ---------------------------------------------------------------------------------
 (1) _USART_Tx                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_In                                             4     0      4     412
                                             13 COMRAM     4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _USART_In
     ___lldiv
   _USART_Tx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     13      13       1       20.0%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Oct 02 00:58:38 2019

                     l32 7EB0                       l29 7F02                       l72 7FFE  
                     l65 7FEE                       u50 7F82                       u51 7F7E  
                     u60 7FA4                       u61 7FA0                       u70 7FCC  
                     u71 7FC8                       u80 7EEA                       u85 7EE0  
                     u97 7F28              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
                    l801 7EFC                      l803 7EFE                      l811 7F1E  
                    l805 7F00                      l813 7F36                      l751 7EAC  
                    l815 7F3C                      l807 7F04                      l809 7F18  
                    l771 7F82                      l781 7FCC                      l773 7F8A  
                    l783 7FDC                      l775 7F96                      l767 7F5C  
                    l791 7EB6                      l785 7FDE                      l777 7FA4  
                    l769 7F6C                      l793 7EF4                      l787 7FE8  
                    l779 7FAE                      l795 7EF6                      l797 7EF8  
                    l789 7EB2                      l799 7EFA             __CFG_CPB$OFF 000000  
                    u107 7F46             __CFG_CPD$OFF 000000             __CFG_BOR$OFF 000000  
                    wreg 000FE8             __CFG_FOSC$HS 000000             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     _main 7F04                     start 0000  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000             ___param_bank 000000  
          __CFG_PLLDIV$1 000000           __CFG_CCP2MX$ON 000000                    ?_main 0001  
           USART_In@BAUD 000E          __end_of___lldiv 8000                    _RCREG 000FAE  
                  _SPBRG 000FAF            __CFG_USBDIV$2 000000                    _TXREG 000FAD  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000         __end_of_USART_In 7F04  
       __end_of_USART_Tx 7EB2             USART_Tx@data 0001                    status 000FD8  
         __CFG_ICPRT$OFF 000000           __CFG_PBADEN$ON 000000          __initialization 7EA4  
           __end_of_main 7F5C                   ??_main 0012            __activetblptr 000000  
         __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000                ??___lldiv 0009  
             __accesstop 0060  __end_of__initialization 7EA4            ___rparam_used 000001  
         __pcstackCOMRAM 0001                ?_USART_In 000E                ?_USART_Tx 0001  
             ??_USART_In 0012               ??_USART_Tx 0001          __CFG_VREGEN$OFF 000000  
                __Hparam 0000                  __Lparam 0000                  ___lldiv 7F5C  
                __pcinit 7EA4                  __ramtop 0800                  __ptext0 7F04  
                __ptext1 7EAA                  __ptext2 7EB2                  __ptext3 7F5C  
   end_of_initialization 7EA4          ___lldiv@divisor 0005          ___lldiv@counter 000D  
              _RCSTAbits 000FAB                _TRISCbits 000F94                _TXSTAbits 000FAC  
      __size_of_USART_In 0052        __size_of_USART_Tx 0008      start_initialization 7EA4  
       __CFG_LPT1OSC$OFF 000000                 ?___lldiv 0001         __CFG_WDTPS$32768 000000  
               _USART_In 7EB2                 _USART_Tx 7EAA                 __Hrparam 0000  
               __Lrparam 0000         __size_of___lldiv 00A4            __size_of_main 0058  
  __CFG_CPUDIV$OSC1_PLL2 000000         ___lldiv@dividend 0001         ___lldiv@quotient 0009  
